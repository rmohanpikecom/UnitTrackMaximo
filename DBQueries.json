{

  "qryProjectTaskGetList": "select hsl_oracletaskid Parent_Task_Id, hsl_workorderid Parent_Task_Number, hsl_businessunitname BusinessUnitName, proj.hsl_oracleid Project_Id, hsl_oracleprojectnumber Project_Number  from [dbo].msdyn_workorder task Inner Join [dbo].[hsl_pikejob] proj on task.hsl_pikejobid=proj.hsl_pikejobid Where hsl_workorderid  in ( '33585863-5', '7944764-1', '7945271-1', '7945618-1', '7945770-1', '7946140-1','10012889')",

  "qrySubTaskData": "SELECT PROJ.SEGMENT1 PROJECT_NUMBER, NVL(PROJ.ATTRIBUTE14,'N') Subtask_Project_Flag, T.WBS_LEVEL, PARENT.PARENT_TASK_NO, T.Task_Number, T.Task_Name, T.Task_Id,  T.Chargeable_Flag, SUBSTR(T.Task_Number,1, INSTR(T.Task_Number, '-' , 1 ) - 1) Crew_Leader FROM pjf_projects_all_B proj JOIN pjf_projects_all_TL pn on proj.project_ID = pn.Project_ID JOIN PJF_PROJECT_CLASSES CLS on PROJ.PROJECT_ID = CLS.PROJECT_ID JOIN PJF_CLASS_CATEGORIES_VL CATID on CLS.CLASS_CATEGORY_ID = CATID.CLASS_CATEGORY_ID AND CATID.CLASS_CATEGORY = 'Line of Business' LEFT join PJF_CLASS_CODES_VL CD ON CD.CLASS_CATEGORY_ID = cls.CLASS_CATEGORY_ID AND CD.CLASS_CODE_ID = CLS.CLASS_CODE_ID JOIN pjf_proj_elements_VL elm on elm.project_id= proj.Project_ID JOIN PJF_TASKS_V t on T.Task_ID = ELM.PROJ_ELEMENT_ID OUTER APPLY (SELECT X.TASK_NUMBER PARENT_TASK_NO, PLANNING_START_DATE PARENT_PLAN_START_DATE FROM PJF_TASKS_V X WHERE X.TASK_ID = case when t.wbs_level = 1 then t.task_id else t.parent_task_id end) PARENT LEFT OUTER JOIN HR_ORGANIZATION_UNITS ORG ON PROJ.CARRYING_OUT_ORGANIZATION_ID= ORG.ORGANIZATION_ID LEFT OUTER JOIN XLE_ENTITY_PROFILES ENT ON PROJ.LEGAL_ENTITY_ID=ENT.LEGAL_ENTITY_ID LEFT OUTER JOIN PJF_WORK_TYPES_VL WTN ON WTN.WORK_TYPE_ID = PROJ.WORK_TYPE_ID LEFT OUTER JOIN HZ_Parties Customer ON Customer.Party_NUMBER = PROJ.ATTRIBUTE3 LEFT OUTER JOIN PJF_PROJECT_TYPES_VL PROJ_TYPE ON PROJ.PROJECT_TYPE_ID = PROJ_TYPE.PROJECT_TYPE_ID WHERE PROJ.SEGMENT1 like @ProjectNumber and T.TASK_NUMBER like '%' || @TaskNumber || '%' and T.WBS_LEVEL = '2' ORDER BY PROJ.SEGMENT1 DESC, PARENT.PARENT_TASK_NO, T.WBS_LEVEL, T.Task_Number fetch first 1 row only ",

  "qryProjectTaskData": "SELECT @Project PARAM_PROJ_TO_BILL, @PARENT_TASKNO PARAM_WONO_TO_BILL, @SUBTASK PARAM_SUBTASK_TO_BILL, @SERVICE_ITEM PARAM_Unit_TO_BILL, @Quantity PARAM_Quantity, @EffectiveDate\t\t\t\tPARAM_WE_Date,          'ERROR CODES->'              ERROR_CODES,          CASE              WHEN TASK.WO_Number IS NULL THEN 'Task Invalid or Not Provided'              ELSE ''          END ORACLE_TASK_NO,          CASE              WHEN '' IS NULL AND                   PROJ.ATTRIBUTE14 ='Y'              THEN 'Project Requires Billable Subtask Name'              WHEN @SUBTASK  IS NOT NULL AND                   PROJ.ATTRIBUTE14 IS NULL              THEN 'Project Does Not Require Billable Subtask Name'              WHEN @SUBTASK  IS NULL AND                   PROJ.ATTRIBUTE14 IS NULL              THEN ''              WHEN @SUBTASK  IS NOT NULL and                   PROJ.ATTRIBUTE14 = 'Y' and                   SUBTASK.ST_WO_Number IS NULL              THEN 'N/A'              ELSE ''          END ORACLE_SUBTASK,          CASE              WHEN task.WO_Billable IS NULL THEN 'Billable Parent Task Required'              WHEN task.WO_Billable = 'N'   THEN 'Parent Task Must be Billable=Y'              WHEN task.WO_Billable = 'Y'   THEN ''              ELSE ''          END PARENT_BILLABLE_FLAG,          CASE              WHEN @SUBTASK  IS NULL AND                   PROJ.ATTRIBUTE14 ='Y'              THEN 'Project Requires Subtask'              WHEN @SUBTASK  IS NOT NULL AND                   PROJ.ATTRIBUTE14 IS NULL              THEN 'Project Does Not Require SR'              WHEN @SUBTASK  IS NULL AND                   PROJ.ATTRIBUTE14 IS NULL              THEN ''              WHEN @SUBTASK  IS NOT NULL and                   PROJ.ATTRIBUTE14 = 'Y' and                   SUBTASK.ST_WO_Number IS NULL              THEN 'Subtask Not Found'              WHEN @SUBTASK  IS NOT NULL and                   PROJ.ATTRIBUTE14 = 'Y' and                   SUBTASK.ST_WO_Number IS NOT NULL  AND                   ST_WO_Billable || ST_WO_Chargeable <> 'YY'              THEN 'Subtask must be Billable & Chargeable'              ELSE ''          END SUBTASK_BILLABLE_CHARGEABLE_FLAG,          CASE              WHEN RATE_SCHD_INFO.UNIT_NAME IS NULL THEN 'Unit Not Found in Rate Schedule'              ELSE ''          END Rate_Schedul_Error,          'PROJ_TASK DETAILS->'             PROJ_TASK_DETAILS,          proj.segment1                     Project_Number,          proj_name.NAME                    Project_Name,          PROJ.ATTRIBUTE14                  Subtask_Project,          task.WO_Number                    Parent_WO_Number,          task.WO_NAME                      Parent_WO_Name,          task.WO_Billable                  Parent_Billable,          task.WO_Chargeable                Parent_Chargeable,          SUBTASK.TOP_TASK_ID,          ST_WO_Number                      Subtask_WO_Number,          ST_WO_NAME                        Subtask_WO_NAME,          ST_WO_Billable                    Subtask_WO_BILLABLE,          ST_WO_Chargeable                  Subtask_WO_CHARGEABLE,          SUBSTR(ST_WO_NUMBER,1, INSTR(ST_WO_Number, '-' , 1 ) - 1) Crew_Leader,          'RATE SCHEDULE DETAIL->'          RATE_SCHEDULE_DETAILS,          RATE_SCHD_INFO.EXP_NAME,          RATE_SCHD_INFO.rate_schedule_name,          RATE_SCHD_INFO.UNIT_NAME,          RATE_SCHD_INFO.RATE,          RATE_SCHD_INFO.UNIT_OF_MEASURE,          RATE_SCHD_INFO.RATE_START_DATE,          RATE_SCHD_INFO.RATE_END_DATE,              'FBDI'                                     \t\t FBDILOADER,              SUBSTR(@EffectiveDate,1,10)                \tExpenditureDate,              ''                                         \t\t\t PersonName,              ''                                         \t\t\t PersonNumber,              ''                                         \t\t\t HumanResourceAssignment,              proj_name.NAME                              \tProjectName,              proj.segment1                               \t\tProjectNumber,              CASE                  WHEN PROJ.ATTRIBUTE14 = 'Y'                  THEN ST_WO_NAME                  WHEN PROJ.ATTRIBUTE14 IS NULL                  THEN WO_NAME              END                         \t\t\tTASK_NAME,              CASE                  WHEN PROJ.ATTRIBUTE14 = 'Y'                  THEN ST_WO_NUMBER                  WHEN PROJ.ATTRIBUTE14 IS NULL                  THEN WO_NUMBER              END                              \t\t\tTASK_NUMBER,              RATE_SCHD_INFO.EXP_NAME          \tExpenditureType,              RATE_SCHD_INFO.Expenditure_Org   \tExpenditureOrganization,              ''                              \t\t\t ContractNumber,              ''                              \t\t\t FundingSourceNumber,              RATE_SCHD_INFO.UNIT_NAME        \t NonlaborResource,              RATE_SCHD_INFO.NLR_ORG          \t NonlaborResourceOrganization,              @Quantity                     \t\t\t\t Quantity,              CASE                  WHEN PROJ.ATTRIBUTE14 = 'Y'                  THEN ST_WO_WORK_TYPE_NAME                  WHEN PROJ.ATTRIBUTE14 IS NULL                  THEN WO_WORK_TYPE_NAME              END                             \t\t\t WorkType ,               'Additional Info'               \t\t\t AdditionalInfo,               proj.Project_ID                \t\t\t ProjID,               Rate_schd_info.NLR_ID           \t\t NlrID,               WO_TASK_ID                     \t\t TaskID ,               Existing_NLR.Quantity_Exists    \t\t ExistingQtyInPPM,               Org1.Name                      \t\t\t Region,               Ent1.Name                      \t\t\t LegalEntity,               ORG2.Name                       \t\t BusinessUnit  FROM         \tpjf_projects_all_b proj  \t\t\tJOIN pjf_projects_all_tl proj_name ON  \t\t\t\t\tproj.project_id = proj_name.project_id                LEFT OUTER JOIN HR_ORGANIZATION_UNITS ORG1 ON                  PROJ.CARRYING_OUT_ORGANIZATION_ID= ORG1.ORGANIZATION_ID               LEFT OUTER JOIN XLE_ENTITY_PROFILES ENT1 ON                  PROJ.LEGAL_ENTITY_ID=ENT1.LEGAL_ENTITY_ID               LEFT OUTER JOIN HR_ORGANIZATION_UNITS ORG2 ON                  PROJ.ORG_ID = ORG2.ORGANIZATION_ID              JOIN pjb_cntrct_proj_links pc_link ON                     proj.project_id  = pc_link.project_id                     and pc_link.active_flag = 'Y'                     and pc_link.version_type = 'C'  \t\t\tOUTER APPLY  (SELECT \tTask_Number     WO_Number,  \t\t\t                        chargeable_Flag WO_Chargeable,  \t\t\t                        Billable_Flag   WO_Billable,  \t\t\t                        TASK_ID         WO_TASK_ID,  \t\t\t                        TASK_NAME       WO_NAME,  \t\t\t                        tsk.WBS_LEVEL,  \t\t\t                        tsk.PARENT_TASK_ID,  \t\t\t                        WT.Name         WO_WORK_TYPE_NAME,  \t\t\t                        CASE WHEN Task_Number IS NULL THEN '' ELSE 'FOUND' END  ORACLE_STATUS  \t\t\t              FROM \t\tPJF_TASKS_V tsk  \t\t\t                            left outer join pjf_work_types_tl WT  \t\t\t                                on tsk.work_type_id = WT.work_type_id  \t\t\t\t\t\t  WHERE \ttsk.Project_ID = pc_link.project_id and  \t\t\t\t\t\t            tsk.task_number = @PARENT_TASKNO  AND  \t\t\t\t\t\t            tsk.WBS_LEVEL = 1  \t\t\t\t\t\t  ) Task  \t\t\tOUTER APPLY  (SELECT \tTask_Number     ST_WO_Number,  \t\t\t                        chargeable_Flag ST_WO_Chargeable,  \t\t\t                        Billable_Flag   ST_WO_Billable,  \t\t\t                        TASK_ID         ST_WO_TASK_ID,  \t\t\t                        TASK_NAME       ST_WO_NAME,  \t\t\t                        WBS_LEVEL,  \t\t\t                        WT.Name         ST_WO_WORK_TYPE_NAME,  \t\t\t                        TOP_TASK_ID  \t\t\t              FROM \t\tPJF_TASKS_V subtsk  \t\t\t                            left outer join pjf_work_types_tl WT  \t\t\t                                on subtsk.work_type_id = WT.work_type_id  \t\t\t\t\t\t  WHERE  \t\t\t\t\t\t            subtsk.PARENT_TASK_ID = TASK.WO_TASK_ID AND  \t\t\t\t\t\t            subtsk.task_number = @PARENT_TASKNO  AND  \t\t\t\t\t\t            subtsk.WBS_LEVEL <> 1  \t\t\t\t\t\t  ) SUBTASK              JOIN okc_k_headers_all_b Chdr                  on pc_link.contract_id = chdr.id                    and (                          (chdr.version_type = 'C' and chdr.sts_code in ( 'ACTIVE')) OR                          (chdr.version_type = 'A' and chdr.sts_code in ( 'ACTIVE'))                        )              JOIN okc_k_lines_b Cline                  on cline.CHR_ID= chdr.id                     AND pc_link.contract_line_id = cline.id                     and chdr.MAJOR_VERSION = cline.MAJOR_VERSION              Cross Apply                  (                    SELECT    EXP.EXPENDITURE_TYPE_NAME EXP                    FROM      PJB_BILLING_CONTROLS BCTL                                  JOIN PJF_RBS_ELEMENTS ELM ON                                      BCTL.RBS_ELEMENT_ID =  ELM.RBS_ELEMENT_ID                                  JOIN PJF_EXP_TYPES_VL EXP ON                                      ELM.EXPENDITURE_TYPE_ID = EXP.EXPENDITURE_TYPE_ID                    WHERE     BCTL.CONTRACT_ID = chdr.id AND                              BCTL.CONTRACT_LINE_ID = CLINE.ID AND                              BCTL.MAJOR_VERSION = CLINE.MAJOR_VERSION AND                              BCTL.ACTIVE_FLAG = 'Y' AND                              EXP.EXPENDITURE_TYPE_NAME IN (  'Unit Production')                  ) EXP              JOIN PJB_BILL_PLANS_VL bp                  on  chdr.ID = bp.contract_ID and                      bp.bill_plan_id = cline.Bill_Plan_ID and                      bp.major_version = cline.major_version  \t\t\tLEFT OUTER JOIN pjf_rate_schedules_tl rhdr  ON  \t\t\t\t\tbp.nl_bill_rate_sch_id = rhdr.rate_schedule_id  \t\t\tOUTER APPLY  \t\t\t    (                          SELECT                                  rhdr.Rate_Schedule_id,                                  rhdr.RATE_SCHEDULE_NAME                     RATE_SCHEDULE_NAME,                                  rdtl.Schedule_Line_ID,                                  ExpType_TL.EXPENDITURE_TYPE_NAME            EXP_NAME,                                  nlr.nlr_name                                UNIT_NAME,                                  rdtl.RATE,                                  rdtl.RATE_UNIT                              UNIT_OF_MEASURE,                                  SUBSTR(rdtl.START_DATE_ACTIVE,1,10)         RATE_START_DATE,                                  SUBSTR(rdtl.END_DATE_ACTIVE,1,10)           RATE_END_DATE,                                  exporg.name                                 Expenditure_Org,                                  nlr_org.name                                NLR_Org,                                  rdtl.Non_labor_resource_id                  NLR_ID                          FROM                                      pjf_rate_schedules_tl rhdr                              \t\t\tjoin pjf_rate_schedule_lines rdtl                                              on rhdr.rate_schedule_id  =  rdtl.rate_schedule_id                                          Join pjf_non_labor_res_tl nlr                                              on nlr.non_labor_resource_id = rdtl.non_labor_resource_id                              \t\t\tJoin pjf_exp_types_b ExpType_B                                              on ExpType_B.Expenditure_Type_ID = rdtl.EXPENDITURE_TYPE_ID                              \t\t\tJoin pjf_exp_types_tl ExpType_TL                                              on ExpType_TL.expenditure_type_id = ExpType_B.expenditure_type_id and                                                 ExpType_TL.Language = 'US'                                          left outer Join pjf_non_labor_res_orgs nlrorg                                              on nlr.non_labor_resource_id = nlrorg.non_labor_resource_id                                          left outer join hr_all_organization_units_tl exporg                                              on proj.carrying_out_organization_id = exporg.organization_id                                          left outer join hr_all_organization_units_tl nlr_org                                              on nlr_org.organization_id = nlrorg.organization_id                          WHERE                                      bp.nl_bill_rate_sch_id = rhdr.rate_schedule_id AND                                      nlr.nlr_name  LIKE '%' || 'OAA01-MAN HOUR RATE PER MAN OH' || '%' AND                                          (          \t\t\t\t\t\t\t        SUBSTR(rdtl.START_DATE_ACTIVE,1,10)                    <=  @EffectiveDate AND          \t\t\t\t\t\t\t        SUBSTR(NVL(rdtl.END_DATE_ACTIVE,'2050-01-01'),1,10)    >= @EffectiveDate                                          )                      ) RATE_SCHD_INFO              OUTER Apply                      (   Select SUM(EI.Quantity) as Quantity_Exists                              From pjc_exp_items_all EI                                  Join PJF_TASKS_V T on T.TASK_ID = EI.TASK_ID                              where                                              EI.Expenditure_Item_Date = @EffectiveDate AND                                              EI.task_id IN (SELECT task_ID FROM PJF_TASKS_V where top_task_id = subtask.top_task_id ) AND                                              EI.project_id = PROJ.Project_ID and              \t\t\t                    EI.Non_labor_resource_id = Rate_schd_info.NLR_ID                      ) Existing_NLR  WHERE  \tproj.segment1 = @Project"


}
